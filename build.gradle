plugins {
  id 'java'
  id 'war'
  alias(libs.plugins.spring.boot.v3dot4)
  alias(libs.plugins.spring.dependency.management)
}

group = 'org.fp024.lotto'
version = '0.0.1-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = "${projectEncoding}"

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs.add("-parameters")
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

  implementation ("com.querydsl:querydsl-jpa") {
    artifact {
      classifier = 'jakarta'
    }
  }
  annotationProcessor (
    'jakarta.persistence:jakarta.persistence-api', 
    'jakarta.annotation:jakarta.annotation-api'
  )
  annotationProcessor ("com.querydsl:querydsl-apt") {
    artifact {
      classifier = 'jakarta'
    }
  }

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

  implementation 'org.webjars:webjars-locator-core'
  implementation (libs.webjars.bootstrap)
  implementation (libs.webjars.jquery)

  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }
}
